#version 330

in vec3 textureCoords;

layout (location = 0) out vec4 out_Colour;
layout (location = 1) out vec4 out_BrightColour;
layout (location = 2) out vec4 out_VelocityColour;

uniform samplerCube cubeMap;
uniform samplerCube cubeMap2;
uniform float blendFactor;
uniform float isNonStatic;
uniform vec3 fogColor;

const float lowerLimit = 50.0;
const float upperLimit = 120.0;

void main(void){
	vec4 texture1 = textureCube(cubeMap, textureCoords);
	vec4 texture2 = textureCube(cubeMap2, textureCoords);
    vec4 finalColour = mix(texture1, texture2, blendFactor);

    float factor = (textureCoords.y - lowerLimit) / (upperLimit - lowerLimit) * -1;
    factor = clamp(factor, 0.0, 1.0);
    out_Colour = finalColour + factor;
    out_BrightColour = vec4(0.0);
    if(isNonStatic > 0.5){
        out_VelocityColour = vec4(1.0, 0.0, 0.0, 1.0);
    }else{
        out_VelocityColour = vec4(1.0, 1.0, 0.0, 1.0);
    }

}